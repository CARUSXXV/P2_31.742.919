MiniDocumentación del Proyecto "AquaRepair" (Task 1 de Programación 2)

C.I: 31.742.919

1. Descripción General.

En resumindas cuentas, "AquaRepair" es una aplicación web con un estilo moderno para un servicio de plomería profesional, diseñada para ofrecer una experiencia de usuario acogedora y una presentación visual atractiva, además de tener una llamada a la acción un tanto pronunciada, ya que como viene descrito en el archivo recibido, se trata de un servicio de plomería/fontanería urgente.

2. Estructuración del Proyecto

2.1 Tecnologías Principales Utilizadas.

- Node.js con Express.
- EJS como motor de plantillas.
- TypeScript para tipado estático.
- CSS moderno con variables personalizadas.
- Bibliotecas: AOS (Animate On Scroll), Swiper (Deslizador).

2.2 Arquitectura

- `/public`: Archivos estáticos.
- `/src`: Directorio principal del código fuente.
  - `/views`: Plantillas EJS para las vistas.
- `server.ts`: Servidor Express principal, el cual también contiene información relevante de la empresa.

3. Componentes Principales

3.1 Navbar
- Diseño responsive que viene integrado con un menú "hamburguesa" para móviles.
- Animaciones en hover.
- Efecto de desplazamiento con blur.
- Logo animado con gradiente.

3.2 Hero Section
- Video de fondo con overlay (Para dar la mejor ambientación posible).
- Contenido centrado con animaciones de entrada al cargar la página.
- CTA (Call-to-Action) prominente.
- Diseño responsive para todos los dispositivos.

3.3 Features Section
- Tarjetas interactivas con efectos hover para hacerlo más moderno y atractivo.
- Iconos animados.
- Fondo con gradientes y efectos.
- Layout responsive en grid.

3.4 Services Section
- Tarjetas de servicio con imágenes.
- Detalles expandibles.
- Iconos descriptivos.
- Animaciones en scroll.

3.5 Projects Section
- Galería de proyectos.
- Overlay con información.
- Categorización de proyectos.
- Efectos de hover.

3.6 Testimonials Section
- Slider con Swiper.js.
- Tarjetas de testimonios.
- Sistema de calificación.
- Navegación intuitiva.

3.7 Stats Section
- Contador de estadísticas.
- Animaciones flotantes.
- Diseño responsive.
- Efectos visuales.

3.8 FAQ Section
- Preguntas frecuentes expandibles.
- Animaciones suaves.
- Diseño intuitivo.
- Organización clara.

3.9 CTA Section
- Llamada a la acción prominente.
- Fondo con patrón.
- Botones destacados.
- Diseño responsive.

3.10 Footer
- Información de contacto.
- Enlaces sociales.
- Certificaciones.
- Diseño moderno.

4. Características Técnicas

4.1 Optimización
- Lazy loading de imágenes.
- Minificación de assets.
- Compresión de respuestas.
- Caché del navegador.

4.2 Animaciones
- AOS para animaciones en scroll.
- Transiciones CSS.
- Efectos de hover.
- Animaciones de carga.

4.3 SEO
- Meta tags optimizados.
- Estructura semántica.
- URLs amigables.
- Contenido accesible.

5. Variables de Estilo en el Css
:root {
    --primary-color: #0066cc;
    --primary-dark: #004d99;
    --secondary-color: #00aaff;
    --accent-color: #ff6b00;
    --text-primary: #1a1a1a;
    --text-secondary: #4a4a4a;
    --bg-primary: #ffffff;
    --bg-secondary: #f5f8ff;
}

6. Mantenimiento
- Actualización regular de dependencias.
- Monitoreo de rendimiento.
- Backups automáticos.
- Logs de errores.

7. Mejores Prácticas
- Código limpio y dividido por secciones comentadas.
- Nombres descriptivos.
- Reutilización de componentes.
- Principios SOLID.

8. Scripts (Visión detallada).

Scripts Externos:

1. AOS (Animate On Scroll).

<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>

- Propósito: AOS es una biblioteca que permite animar elementos a medida que se desplazan por la página.
- Inicialización con JS:

  AOS.init({
    duration: 1000, // Duración de la animación en milisegundos
    once: true, // La animación se ejecuta solo una vez
    offset: 100, // La animación comienza cuando el elemento está a 100 píxeles del viewport
  });

  - duration: Establece la duración de las animaciones en 1 segundo.
  - once: Las animaciones se ejecutan solo una vez por elemento.
  - offset: Las animaciones comienzan cuando el elemento está a 100 píxeles del viewport.

2. Swiper.

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

- Propósito: Swiper es una biblioteca para crear sliders/carousels responsivos.
- Inicialización en JS:

  new Swiper(".testimonials-slider", {
    slidesPerView: 1, // Número de diapositivas visibles por defecto
    spaceBetween: 30, // Espacio entre diapositivas en píxeles
    pagination: {
      el: ".swiper-pagination", // Elemento de paginación
      clickable: true, // Permite hacer clic en la paginación
    },
    breakpoints: {
      768: {
        slidesPerView: 2, // Muestra 2 diapositivas en pantallas de al menos 768px
      },
      1024: {
        slidesPerView: 3, // Muestra 3 diapositivas en pantallas de al menos 1024px
      },
    },
    autoplay: {
      delay: 5000, // Cambia de diapositiva automáticamente cada 5 segundos
    },
  });


Scripts Personalizados:

1. Efecto de Scroll en la Navbar.

window.addEventListener("scroll", () => {
  const navbar = document.querySelector(".navbar");
  if (window.scrollY > 50) {
    navbar.classList.add("scrolled");
  } else {
    navbar.classList.remove("scrolled");
  }
});

- Propósito: Cambia la apariencia de la barra de navegación cuando el usuario hace scroll más de 50 píxeles hacia abajo.
- Funcionalidad: Añade la clase `scrolled` a la barra de navegación para aplicar estilos diferentes.

2. Menú Móvil.

const mobileMenuBtn = document.querySelector(".mobile-menu-btn");
const navLinks = document.querySelector(".nav-links");

mobileMenuBtn.addEventListener("click", () => {
  navLinks.classList.toggle("active");
});

- Propósito: Permite abrir y cerrar el menú de navegación en dispositivos móviles.
- Funcionalidad: Alterna la clase `active` en los enlaces de navegación cuando se hace clic en el botón del menú móvil.

3. Desplazamiento Suave

document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
  anchor.addEventListener("click", function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute("href"));
    if (target) {
      target.scrollIntoView({
        behavior: "smooth",
      });
      // Cierra el menú móvil si está abierto
      navLinks.classList.remove("active");
    }
  });
});

- Propósito: Proporciona un efecto de desplazamiento suave al hacer clic en enlaces de anclaje.
- Funcionalidad: Desplaza suavemente la vista al elemento objetivo y cierra el menú móvil si está abierto.


9. Funcionalidad de Menú hamburguesa (Detallado).

Estructura HTML:

Botón del Menú Móvil.
- Elemento: <button class="mobile-menu-btn">
- Icono: <i class="ri-menu-line"></i> de la biblioteca Remixicon.
- Propósito: Alterna la visibilidad de los enlaces de navegación en dispositivos móviles.

<button class="mobile-menu-btn">
  <i class="ri-menu-line"></i>
</button>


Enlaces de Navegación.
- Contenedor: <div class="nav-links">
- Enlaces: Etiquetas de anclaje que enlazan a diferentes secciones de la página.
- Visibilidad: Controlada por la clase `active`, que se alterna mediante JavaScript.


<div class="nav-links">
  <a href="#inicio">Inicio</a>
  <a href="#servicios">Servicios</a>
  <a href="#proyectos">Proyectos</a>
  <a href="#testimonios">Testimonios</a>
  <a href="#preguntas">FAQ</a>
  <a href="#contacto">Contacto</a>
</div>


Estilo CSS:

Botón del Menú Móvil.
- Estado Predeterminado: Oculto en pantallas más grandes (display: none;).
- Visible en Móviles: Se muestra en pantallas con un ancho máximo de 768px.

.mobile-menu-btn {
  display: none;
  background: none;
  border: none;
  color: var(--primary-color);
  font-size: 1.5rem;
  cursor: pointer;
}

@media (max-width: 768px) {
  .mobile-menu-btn {
    display: block;
  }
}


Enlaces de Navegación
- Estado Predeterminado: Oculto en móviles (display: none;).
- Estado Activo: Se muestra como un contenedor flex cuando se aplica la clase `active`.


.nav-links {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: white;
  padding: 1rem;
  flex-direction: column;
  gap: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  border-radius: 0 0 15px 15px;
  z-index: 1000;
}

.nav-links.active {
  display: flex;
}

Funcionalidad JavaScript:

Alternar Menú Móvil
- Escucha de Eventos: Adjunta al botón del menú móvil.
- Funcionalidad: Alterna la clase `active` en el contenedor de enlaces de navegación, mostrando u ocultando los enlaces.


const mobileMenuBtn = document.querySelector(".mobile-menu-btn");
const navLinks = document.querySelector(".nav-links");

mobileMenuBtn.addEventListener("click", () => {
  navLinks.classList.toggle("active");
});


Desplazamiento Suave.
- Propósito: Proporciona un efecto de desplazamiento suave al hacer clic en enlaces de navegación.
- Funcionalidad Adicional: Cierra el menú móvil si está abierto.

javascript:

document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
  anchor.addEventListener("click", function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute("href"));
    if (target) {
      target.scrollIntoView({
        behavior: "smooth",
      });
      // Cierra el menú móvil si está abierto
      navLinks.classList.remove("active");
    }
  });
});

10. Media Queries (Responsive).

Explicación detallada del responsive observado en el código del css.

1. Botón del Menú Móvil:
   -El botón del menú móvil (`.mobile-menu-btn`) se muestra (`display: block;`) en dispositivos con un ancho máximo de 768px. Esto permite que el menú hamburguesa sea visible en dispositivos móviles.

2. Logo:
   -El tamaño de la fuente del logo se reduce y se ajusta para que no se desborde en pantallas pequeñas. Se eliminan márgenes negativos y se alinea el contenido al inicio.

3. Enlaces de Navegación:
   -Los enlaces de navegación (`.nav-links`) están ocultos por defecto en dispositivos móviles y se muestran como un menú desplegable cuando se activa el menú móvil. Se organizan en una columna y se centran.

4. Contacto de Emergencia:
   -El botón de contacto de emergencia (`.emergency-contact`) se oculta en dispositivos móviles para simplificar la interfaz.

5. Sección Hero:
   -El tamaño de la fuente del título en la sección Hero se reduce para adaptarse mejor a pantallas más pequeñas.

6. Cuadrículas de Servicios, Proyectos y Características:
   -Las cuadrículas se ajustan para mostrar una sola columna en dispositivos móviles, asegurando que el contenido sea legible y accesible.

7. Pie de Página:
   -La cuadrícula del pie de página se ajusta para mostrar una sola columna, lo que facilita la lectura y navegación en dispositivos móviles.

Nota: Tener el css respectivo a la mano.
